<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ze sheng</title>
    <link>https://zesheng630.github.io/</link>
    <description>Recent content on ze sheng</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright> </copyright>
    <lastBuildDate>Wed, 23 Mar 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://zesheng630.github.io/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>for her</title>
      <link>https://zesheng630.github.io/posts/for-her/</link>
      <pubDate>Wed, 23 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/posts/for-her/</guid>
      <description>The dilemma for me was deciding when the stress of a relationship outweighs the love. How do you know when you&amp;rsquo;re just better off by yourself. I learned the answer is sucess just has no time for emotions. People get on the top of any industry by working algorithmically. But most likely you&amp;rsquo;re like me where horny and lonely is enough to pause your whole life. The reason I made this is it forces me to reflect and be objective with my first relationship instead of being petty.</description>
    </item>
    
    <item>
      <title>COMP4121</title>
      <link>https://zesheng630.github.io/posts/comp4121/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/posts/comp4121/</guid>
      <description>Stats Expectation and Variance of a Random Variable The expected value of a random variable is its mean. Assuming that the expected value converges, the expected value can be calculated as shown below.
   Discrete random variable Continuous random variable     $E(X) = \sum_{i = 1}^{\infty} v_i \cdot p_i$ $E(X) = \int_{-\infty}^{\infty}x \cdot f(x) dx$    The variance of a random variable is defined as $V(X) = E(X - E(X))^2$ assuming that both expectations involved are finite; the standard deviation of a random variable $X$ is given by $\sigma = \sqrt{V(X)}$.</description>
    </item>
    
    <item>
      <title>UNSW Course Review</title>
      <link>https://zesheng630.github.io/posts/unsw-course-review/</link>
      <pubDate>Tue, 22 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/posts/unsw-course-review/</guid>
      <description>Context Before UNSW, I had major interest in mathematics pursuing actuarial studies. However, the lifestyle of an actuary seemed stagnant, so I picked a double degree in Computer Science / Mathematics as the degree was 4 years rather than studying 3 year bachelors + 5 years studying the actuarial exams, despite having 0 programming experience.</description>
    </item>
    
    <item>
      <title>COMP3821</title>
      <link>https://zesheng630.github.io/posts/comp3821/</link>
      <pubDate>Mon, 21 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/posts/comp3821/</guid>
      <description>The course is split into four topics
 Divide and Conquer Greedy Algorithms Dynamic Programming Linear Programming and Reductions  However for the sake of organising notes, I&amp;rsquo;ve included an extra section to cover knowledge not covered in the course&amp;rsquo;s prerequisite (COMP2521), and split Linear Programming and Reductions into two sections.
Misc Knowledge  Asymptotic Runtime $O(n)$, Big O  Denotes the upper bound of the runtime of an algorithm If $f(n) = O(g(n))$, there exist positive constants $c$ and $n_0$ such that $0 \leq f(n) \leq cg(n), \forall n \geq n_0$ $f(n) = O(g(n))$ means that $f(n)$ does not grow substantially faster than $g(n)$ because a multiple of $g(n)$ eventually dominates $f(n)$ Most commonly used as we are concerned with the worst runtime  $\Theta(n)$, Big Theta  Denotes a tight bound of the runtime of an algorithm $f(n) = \Theta(g(n))$ iff $f(n) = O(g(n))$ and $f(n) = \Omega(g(n))$ Less commonly used than $O(n)$, but more common than $\Omega(n)$  $\Omega(n)$, Big Omega  Denotes the lower bound of the runtime of an algorithm If $f(n) = \Omega(g(n))$, there exist positive constants $c$ and $n_0$ such that $0 \leq cg(n) \leq f(n), \forall n \geq n_0$ $f(n) = \Omega(g(n))$ means that $f(n)$ grows at least as fast as $g(n)$, because $f(n)$ eventually dominates a multiple of $g(n)$ Least often used as we usually aren&amp;rsquo;t concerned with the best runtime  Math Log Identity If $a, b, c &amp;gt; 0$ then $$a^{\log_{b}c} = c^{\log_{b}a}$$ Proof</description>
    </item>
    
    <item>
      <title>All Pairs Shortest Paths, Rings and Semi Rings</title>
      <link>https://zesheng630.github.io/posts/all-pairs-shortest-paths-rings-and-semi-rings/</link>
      <pubDate>Wed, 02 Mar 2022 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/posts/all-pairs-shortest-paths-rings-and-semi-rings/</guid>
      <description>Introduction The Single Source Shortest Paths (SSSP) problem is to find the shortest distance from one node to every other node in a graph. The All Pairs Shortest Paths (APSP) problem, is to determine for every node in the graph, the shortest distance to every other node in a graph. APSP typically has applications in routing algorithms, i.e. finding the shortest path from one location to another.
Usual algorithms Depending on the type of graph, for both SSSP and APSP there are different algorithms to solve the relevant problems.</description>
    </item>
    
    <item>
      <title>projects</title>
      <link>https://zesheng630.github.io/projects/</link>
      <pubDate>Wed, 14 Jul 2021 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/projects/</guid>
      <description>dazed PENDING IN CONSTRUCTION :: online clothing store</description>
    </item>
    
    <item>
      <title>about</title>
      <link>https://zesheng630.github.io/about/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      
      <guid>https://zesheng630.github.io/about/</guid>
      <description>Hi, I&amp;rsquo;m Ze Sheng and I&amp;rsquo;m studying Computer Science and Mathematics at the University of New South Wales.
I like algorithms, backend development, some theoretical computer science. Some languages I like to program in are Python and Javascript.
In my spare time, I like running, cats, butterflies, make art and listen to music.
-- my handcrafted website data Person = Person {firstName :: String, lastName :: String} main :: IO () main = let g = Person &amp;quot;ze&amp;quot; &amp;quot;sheng&amp;quot; in putStrLn $ &amp;quot;an&amp;quot; ++ firstName g  </description>
    </item>
    
  </channel>
</rss>
